so this is the plan for this app:

A study platform where students upload class slides → AI extracts exam-relevant topics → generates a structured study guide → finds the best YouTube videos → and provides a dedicated “Let’s Learn” tab for guided study with split-screen video + notes, progress tracking, and resume where you left off.
2. High-Level Architecture
Frontend (React + Tailwind + shadcn/ui)
Auth + onboarding
Class & exam dashboards
File upload + AI processing
Study guide outline viewer
Dedicated “Let’s Learn” tab (topic/video list + split-screen mode)
Backend (Next.js API routes / Express)
Auth + sessions
File storage (Supabase/Firebase/S3)
Database (Postgres/Supabase)
AI middleware (Gemini 2.5 Flash)
YouTube API integration
AI Layer
Slide → Topic extraction
Study guide JSON generator
YouTube reranker for best videos
3. Key Features
🔑 Authentication
Sign up / login (email + social providers)
Profiles with classes, exams, and study progress
🏫 Classes & Exams
Create/manage classes
Create exams tied to slides
Exam dashboard = study guide + Let’s Learn tab
📂 File Handling
Upload PDFs / PPTs
Extract text → Gemini → structured topics + subpoints
Store results in DB
📖 Study Guide
Collapsible outline of topics & subpoints
Editable notes inside outline
Export (Markdown, PDF, Word)
🎥 Video Recommendations
Each topic linked to top videos
Gemini reranks YouTube search results
Save top 3 per topic
✨ Let’s Learn Tab (Core Study Mode)
Entry Point: Separate tab in each exam → lists all topics with videos
Views:
List View (rows: topic, video thumbnail, duration, Start button)
Gallery View (cards with video thumbnails + Start button)
Start Button → Split-Screen Mode:
Left side: YouTube player (resume from saved timestamp if returning)
Right side: Notes editor (markdown-enabled)
Typing pauses video (optional toggle)
Notes automatically saved & tied to topic + video
Progress Tracking:
Store last watched timestamp per video
Store unsaved notes automatically
Resume exactly where you left off when returning
Completion Flow:
Mark topic as “Completed”
Progress visible in list/gallery
📝 Notes
Inline notes in Study Guide
Structured notes from “Let’s Learn” sessions
Sync all notes to user profile
Export anytime
🔍 Search & Discoverability
Global search across classes, topics, notes, videos
Filter/sort in Let’s Learn tab
Bookmarks for quick access
4. Tech Stack
Frontend
React + Vite
TailwindCSS + shadcn/ui
React Query (server state)
Zustand or Redux Toolkit (local state)
Framer Motion (animations)
Backend
Next.js API routes or Express
Supabase (auth, DB, storage)
Gemini 2.5 Flash (text → topics, rerank)
YouTube Data API (video fetch)
Database Schema (extended)
Users (id, email, name)
Classes (id, user_id, title)
Exams (id, class_id, title, date)
Slides (id, exam_id, file_url, ai_summary_json)
Topics (id, slide_id, title, subpoints_json)
Videos (id, topic_id, title, url, thumbnail, duration)
Notes (id, topic_id, user_id, content, source, last_updated)
LearningSessions (id, topic_id, video_id, user_id, last_timestamp, completed: bool)
5. AI Workflows
Slide Processing
Upload → Extract text → Gemini summarization → structured topics
Study Guide
Outline rendered from stored topics JSON
Video Finder
YouTube API search → Gemini rerank → best videos per topic
Let’s Learn
User selects topic → enters split-screen
Notes + video progress auto-synced
Resume from saved session state